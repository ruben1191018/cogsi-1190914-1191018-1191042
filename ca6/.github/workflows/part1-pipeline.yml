name: CI/CD Pipeline

on:
  push:
  workflow_dispatch:

jobs:
  checkout:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

  assemble:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'

      - name: Make gradlew executable
        run: chmod +x ca6/springApplication/gradlew

      - name: Compile and Build Artifacts
        run: |
          cd ca6/springApplication
          ./gradlew clean build -x test

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'

      - name: Make gradlew executable
        run: chmod +x ca6/springApplication/gradlew

      - name: Run Tests
        run: |
          cd ca6/springApplication
          ./gradlew test

      - name: Publish Test Results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: ca6/springApplication/build/test-results/test/*.xml

  archive:
    runs-on: ubuntu-latest
    steps:
      - name: Archive Artifacts
        run: |
          cd ca6/springApplication/app/build/libs
          mv app.jar app-stable-v1.${{ github.run_number }}.jar

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: built-artifacts
          path: ca6/springApplication/app/build/libs/*.jar

  deploy_to_production:
    runs-on: ubuntu-latest
    needs: archive
    steps:
      - name: Request Manual Approval
        uses: hmarr/auto-approve-action@v2
        with:
          message: 'Do you approve the deployment to production?'

  deploy:
    runs-on: ubuntu-latest
    needs: deploy_to_production
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Setup Ansible
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible

      - name: Deploy using Ansible
        run: |
          cd ca6
          ansible-playbook -i vagrant_inventory requirements_app_playbook.yml
          ansible-playbook -i vagrant_inventory db_playbook.yml
          ansible-playbook -i vagrant_inventory app_playbook.yml

  verify_deployment:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Health Check
        run: |
          response=$(curl -o /dev/null -s -w "%{http_code}" http://192.168.33.10:8080/employees)
          if [ "$response" != "200" ]; then
            echo "Health check failed!"
            exit 1
          fi
          echo "Health check passed with response code: $response"
